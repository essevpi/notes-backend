{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","services/login.js","components/NoteForm.js","components/LoginForm.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","textAlign","baseUrl","token","exports","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","logIn","credentials","NoteForm","addNote","handleNoteChange","newNote","onSubmit","onChange","value","type","LoginForm","username","password","setUsername","setPassword","handleLogin","name","target","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","notesToShow","filter","e","preventDefault","loginService","setItem","stringify","setTimeout","noteToAdd","date","Date","toISOString","Math","random","returnedNote","concat","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"qMAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,gCACE,oBAAIC,UAAU,OAAd,SAAsBJ,EAAKK,UAC3B,wBAAQC,QAASL,EAAjB,SAAoCC,QCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,KCSEC,EAhBA,WAQX,OACI,sBAAKC,MARW,CAChBC,MAAO,UACPC,UAAW,SACXC,SAAU,GACVC,UAAW,UAIX,UACI,uBACA,oE,gBCZNC,EAAU,aAEZC,EAAQ,KA+BGC,EAPC,CACZC,OAnBW,WAEX,OADgBC,IAAMC,IAAIL,GACXM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBzCC,OAfQ,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACLC,EAAS,CACXC,QAAS,CAAEC,cAAeb,IAFnB,SAIYG,IAAMW,KAAKf,EAASU,EAAWE,GAJ3C,cAILL,EAJK,yBAKJA,EAASC,MALL,2CAAH,sDAgBRQ,OARW,SAACC,EAAIP,GAEhB,OADgBN,IAAMc,IAAN,UAAalB,EAAb,YAAwBiB,GAAMP,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAOzCW,SA1Ba,SAAAC,GACbnB,EAAK,iBAAamB,KCKPlB,EAFC,CAAEmB,MALP,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACaP,IAAMW,KAHjB,aAG+BO,GADjC,cACJf,EADI,yBAEHA,EAASC,MAFN,2CAAH,uDCOIe,EATE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,iBAAkBC,EAAc,EAAdA,QAC3C,OACI,uBAAMrC,UAAU,WAAWsC,SAAUH,EAArC,UACI,uBAAOI,SAAUH,EAAkBI,MAAOH,IAC1C,wBAAQI,KAAK,SAAb,sBCsBGC,EA1BG,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAC/D,OACI,uBAAMT,SAAUS,EAAhB,UACI,gCACI,+CACA,uBACIN,KAAK,OACLD,MAAOG,EACPK,KAAK,WACLT,SAAU,gBAAGU,EAAH,EAAGA,OAAH,OAAgBJ,EAAYI,EAAOT,aAGrD,gCACI,+CACA,uBACIC,KAAK,WACLD,MAAOI,EACPI,KAAK,WACLT,SAAU,gBAAGU,EAAH,EAAGA,OAAH,OAAgBH,EAAYG,EAAOT,aAGrD,wBAAQC,KAAK,SAAb,uBC2HGS,EAzIH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOd,EAAP,KAAgBiB,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAwCL,mBAAS,MAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAAgCP,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBE,EAAjB,KACA,EAAgCM,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBE,EAAjB,KACA,EAAwBK,mBAAS,MAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACNC,EACGhD,SACAG,MAAK,SAAA8C,GACJV,EAASU,QAEd,IAEHF,qBAAU,WACN,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAChB,IAAML,EAAOS,KAAKC,MAAML,GACxBJ,EAAQD,GACRG,EAAYhC,SAAS6B,EAAK/C,UAE/B,IAEH,IAoCM0D,EAAcf,EAChBH,EACAA,EAAMmB,QAAQ,SAAA3E,GAAI,OAAIA,EAAKG,aAUzBgD,EAAW,uCAAG,WAAOyB,GAAP,eAAAlD,EAAA,6DAClBkD,EAAEC,iBADgB,kBAIKC,EAAa1C,MAAM,CAClCW,WAAUC,aALA,OAIRe,EAJQ,OAQdM,OAAOC,aAAaS,QAAQ,oBAAqBP,KAAKQ,UAAUjB,IAChEG,EAAYhC,SAAS6B,EAAK/C,OAC1BgD,EAAQD,GACRd,EAAY,IACZC,EAAY,IAZE,kDAcdY,EAAgB,qBAChBmB,YAAW,WACPnB,EAAgB,QACjB,KAjBW,0DAAH,sDAqBjB,OACE,sBAAK1D,UAAU,MAAf,UACI,uCACA,cAAC,EAAD,CAAcI,QAASqD,IAEV,OAATE,EACI,cAAC,EAAD,CACIhB,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAAaA,EACbC,YAAaA,IAEjB,gCACI,8BAAIY,EAAKX,KAAT,gBACA,cAAC,EAAD,CACIb,QAjEN,SAACqC,GACfA,EAAEC,iBACF,IAAMK,EAAY,CAChB7E,QAASoC,EACT0C,MAAM,IAAIC,MAAOC,cACjBlF,UAAWmF,KAAKC,SAAW,IAG7BrB,EACG1C,OAAO0D,GACP7D,MAAK,SAAAmE,GACJ/B,EAASD,EAAMiC,OAAOD,IACtB9B,EAAW,QAsDKlB,iBA9CG,SAACoC,GACxBlB,EAAWkB,EAAEvB,OAAOT,QA8CAH,QAASA,OAK7B,gCACI,6BACCiC,EAAYgB,KAAI,SAAA1F,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBAlGL,SAAC+B,GAC1B,IAAMhC,EAAOwD,EAAMmC,MAAK,SAAAC,GAAC,OAAIA,EAAE5D,KAAOA,KAChC6D,EAAW,2BAAQ7F,GAAR,IAAcG,WAAYH,EAAKG,YAEhD+D,EACGnC,OAAOC,EAAI6D,GACXxE,MAAK,SAAAmE,GACJ/B,EAASD,EAAMkC,KAAI,SAAA1F,GAAI,OAAIA,EAAKgC,KAAOA,EAAKhC,EAAOwF,SAEpDM,OAAM,SAAAC,GACLjC,EAAgB,SAAD,OACJ9D,EAAKK,QADD,sCAGf4E,YAAW,WACTnB,EAAgB,QACf,KACHL,EAASD,EAAMmB,QAAO,SAAAiB,GAAC,OAAIA,EAAE5D,KAAOA,SAkFJgE,CAAmBhG,EAAKgC,MAF3ChC,EAAKgC,SAKlB,wBAAQ1B,QAzDa,WACzBsD,GAAYD,IAwDR,SACCA,EAAU,iBAAmB,gBAIlC,cAAC,EAAD,Q,MCzIJsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a71ada21.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <div>\r\n      <li className=\"note\">{note.content}</li>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: '#AAAAFF',\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        textAlign: 'center'\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app - Fullstack Open 2021</em>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nconst baseUrl = '/api/notes';\r\n\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token}\r\n    }\r\n    const response = await axios.post(baseUrl, newObject, config);\r\n    return response.data;\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst exports = {\r\n    getAll,\r\n    create,\r\n    update,\r\n    setToken\r\n}\r\n\r\nexport default exports;","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/login';\r\n\r\nconst logIn = async (credentials) => {\r\n    const response = await axios.post(baseUrl, credentials);\r\n    return response.data;\r\n}\r\n\r\nconst exports = { logIn };\r\n\r\nexport default exports;","import React from 'react';\r\n\r\nconst NoteForm = ({ addNote, handleNoteChange, newNote }) => {\r\n    return (\r\n        <form className=\"NoteForm\" onSubmit={addNote}>\r\n            <input onChange={handleNoteChange} value={newNote} />\r\n            <button type='submit'>Save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NoteForm;\r\n","import React from 'react';\r\n\r\nconst LoginForm = ({ username, password, setUsername, setPassword, handleLogin }) => {\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n            <div>\r\n                <label>Username: </label>\r\n                <input \r\n                    type='text'\r\n                    value={username}\r\n                    name=\"Username\"\r\n                    onChange={({ target }) => setUsername(target.value)}  \r\n                />\r\n            </div>\r\n            <div>\r\n                <label>Password: </label>\r\n                <input \r\n                    type='password'\r\n                    value={password}\r\n                    name=\"Password\"\r\n                    onChange={({ target }) => setPassword(target.value)}  \r\n                />\r\n            </div>\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\nimport noteService from './services/notes';\r\nimport loginService from './services/login';\r\nimport NoteForm from './components/NoteForm';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n      noteService\r\n        .getAll()\r\n        .then(initialNotes => {\r\n          setNotes(initialNotes);\r\n        });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser');\r\n      if (loggedUserJSON) { \r\n          const user = JSON.parse(loggedUserJSON);\r\n          setUser(user);\r\n          noteService.setToken(user.token);\r\n      }\r\n  }, []);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note \"${note.content}\" was already removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter(n => n.id !== id));\r\n      });\r\n  }\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    const noteToAdd = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5\r\n    }\r\n\r\n    noteService\r\n      .create(noteToAdd)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote));\r\n        setNewNote('');\r\n      })\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter( note => note.important )\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value);\r\n  }\r\n\r\n  const handleShowAllNotes = () => {\r\n    setShowAll(!showAll);\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n        const user = await loginService.logIn({\r\n            username, password\r\n        });\r\n\r\n        window.localStorage.setItem('loggedNoteAppUser', JSON.stringify(user));\r\n        noteService.setToken(user.token);\r\n        setUser(user);\r\n        setUsername('');\r\n        setPassword('');\r\n    } catch (exception) {\r\n        setErrorMessage('Wrong credentials');\r\n        setTimeout(() => {\r\n            setErrorMessage(null);\r\n        }, 5000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage} />\r\n        { \r\n            user === null ?\r\n                <LoginForm \r\n                    username={username}\r\n                    password={password}\r\n                    setUsername={setUsername}\r\n                    setPassword={setPassword}\r\n                    handleLogin={handleLogin}\r\n                /> :\r\n                <div>\r\n                    <p>{user.name} is logged</p>\r\n                    <NoteForm \r\n                        addNote={addNote}\r\n                        handleNoteChange={handleNoteChange}\r\n                        newNote={newNote}\r\n                    />\r\n                </div> \r\n        }\r\n\r\n    <div>\r\n        <ul>\r\n        {notesToShow.map(note => \r\n            <Note \r\n                key={note.id} \r\n                note={note} \r\n                toggleImportance={() => toggleImportanceOf(note.id)} />\r\n        )}\r\n        </ul>\r\n        <button onClick={handleShowAllNotes}>\r\n        {showAll ? 'Show important' : 'Show all'}\r\n        </button>\r\n    </div>\r\n    \r\n    <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}