{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","textAlign","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteToAdd","Date","toISOString","Math","random","onChange","target","value","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58cc09fa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <div>\r\n      <li className=\"note\">{note.content}</li>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: '#AAAAFF',\r\n        fontStyle: 'italic',\r\n        fontSize: 12,\r\n        textAlign: 'center'\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app - Fullstack Open 2021</em>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:3001/api/notes';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    const nonExisting = {\r\n        id: 10000,\r\n        content: 'This note is not saved to server',\r\n        date: '2019-05-30T17:30:31.098Z',\r\n        important: true,\r\n      }\r\n    return request.then(response => response.data.concat(nonExisting));\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data); \r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getAll, create, update };","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\nimport noteService from './services/notes';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n      noteService\r\n        .getAll()\r\n        .then(initialNotes => {\r\n          setNotes(initialNotes);\r\n        })\r\n  }, [])\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note \"${note.content}\" was already removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter(n => n.id !== id));\r\n      });\r\n  }\r\n\r\n  const addNote = (e) => {\r\n    e.preventDefault();\r\n    const noteToAdd = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5\r\n    }\r\n\r\n    noteService\r\n      .create(noteToAdd)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote));\r\n        setNewNote('');\r\n      })\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter( note => note.important )\r\n\r\n  const handleNoteChange = (e) => {\r\n    setNewNote(e.target.value);\r\n  }\r\n\r\n  const handleShowAllNotes = () => {\r\n    setShowAll(!showAll);\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n              <Note \r\n                key={note.id} \r\n                note={note} \r\n                toggleImportance={() => toggleImportanceOf(note.id)} />\r\n          )}\r\n        </ul>\r\n        <button onClick={handleShowAllNotes}>\r\n          {showAll ? 'Show important' : 'Show all'}\r\n        </button>\r\n      </div>\r\n      <form className=\"NoteForm\" onSubmit={addNote}>\r\n        <input onChange={handleNoteChange} value={newNote} />\r\n        <button type='submit'>Save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n"],"sourceRoot":""}